<?php
/**
* @file
* A description of what your module does.
*/

define('GF_USER_ROLE_MANAGER_GARDENER_ID', 18);
define('GF_USER_ROLE_WHOLESALE_CUSTOMER_ID', 19);


/**
 * Implements hook_menu().
 */
function gf_discount_menu() {
  $items = [];
  // Страница настроек модуля.
  $items['admin/config/gf-discount'] = [
    'title' => 'GF-Discount ',
    'description' => 'Gf-Discount module settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['gf_discount_settings_form'],
    'access arguments' => ['access administration pages'],
    'file' => 'gf_discount.admin.inc',
  ];
  return $items;
}


/**
 * Implements hook_uc_cart_alter().
 */
function gf_discount_uc_cart_alter(&$items) {
  // Получаем скидку(в процентах) для "новичка".
  if ($newbie_discount = gf_discount_get_newbie_discount($items)) {
    // Если таковая есть, радуем пользователя сообщением, как ему повезло.
    $msg = t('You received a promotional discount of !percent % on all products in your shopping cart',
    ['!percent' => $newbie_discount]);
    drupal_set_message($msg);
  }

  $extra_10 = FALSE;
  if (user_has_role(GF_USER_ROLE_MANAGER_GARDENER_ID) 
    or user_has_role(GF_USER_ROLE_WHOLESALE_CUSTOMER_ID)) { 
    $extra_10 = TRUE; 
  }
  foreach ($items as $key => $item) {
    $discount = FALSE;
    $discount_percent = 0;

    $current_price = $item->price;
    if ($newbie_discount) {
      // // Применяем новичковую скидку(если положено) к цене товара.
      // $items[$key]->price = $items[$key]->sell_price = $current_price - (($current_price / 100) * $newbie_discount);
      $discount = TRUE;
      $discount_percent += $newbie_discount;
    }


    // Start Ilya art
    if (isset($item->field_discount['und'])) {
      $field_discount_tid = $item->field_discount['und'][0]['tid'];
      $discount_term = taxonomy_term_load($field_discount_tid);
      $discount_raw_percent = $discount_term->name;
      $discount_percent += substr($discount_raw_percent, 0, strpos($discount_raw_percent, '%'));
      $discount = TRUE;
    }

    if ($discount) {
      if ($extra_10) {
        $discount_percent += 10;
      }

      $discount_coefficient = 1.0 - $discount_percent / 100;
      $item->price = $item->sell_price = $item->price * $discount_coefficient;
    } 
    elseif ($extra_10) {
      $discount_coefficient = 1.0 - 10 / 100;
      $item->price = $item->sell_price = $item->price * $discount_coefficient;
    }
    // End Ilya art
  }
}

/**
 * Проверка на пользователя-новичка(еще не делал заказов).
 *
 * @return bool
 *   Возвращаем единичку, если заказов еще не было.
 */
function gf_discount_check_newbie($uid=NULL) {
  if (is_null($uid)) {
    global $user;
    $uid = $user->uid;
  }

  if ($uid < 2) return; // Юзер 1 нам тоже не интересен.
  $result = db_query('SELECT 1 FROM {uc_orders} WHERE uid = :uid',
    [':uid' => $uid])->fetchField();

  return !$result;
}


/**
 * Получаем общую сумму заказа.
 *
 * @param array $cart_items
 * @return int
 */
function gf_discount_get_cart_total_sum($cart_items) {
  $sum = 0;
  foreach($cart_items as $item) {
    $sum += $item->qty * $item->price;
  }
  return $sum;
}


/**
 * Получаем дисконт для новочела.
 *
 * @param array $cart_items
 *   массив с элементами корзины
 * @param int $uid
 * @return int
 *   вовращаем процент скидки, или ноль, если не положено
 */
function gf_discount_get_newbie_discount($cart_items, $uid=NULL) {
  $discount = 0;
  $is_newbie = gf_discount_check_newbie($uid);

  if (!$is_newbie) 
    return $discount;

  $cart_total = gf_discount_get_cart_total_sum($cart_items) / 1000;
  $newbie_discounts = variable_get('gf_discount_newbie_discounts', []);
  krsort($newbie_discounts); // сортируем по нисходящей
  foreach(array_keys($newbie_discounts) as $sum) {
    if ($cart_total >= $sum) {
      $discount = $newbie_discounts[$sum];
      break;
    }
  }
  return $discount;
}
