<?php
/**
* @file
* A description of what your module does.
*/

define('GF_USER_ROLE_MANAGER_GARDENER_ID', 18);
define('GF_USER_ROLE_WHOLESALE_CUSTOMER_ID', 19);


/**
 * Implements hook_menu().
 */
function gf_discount_menu() {
  $items = [];
  // Страница настроек модуля.
  $items['admin/config/gf-discount'] = [
    'title' => 'GF-Discount ',
    'description' => 'Gf-Discount module settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['gf_discount_settings_form'],
    'access arguments' => ['administer discounts'],
    'file' => 'gf_discount.admin.inc',
  ];
  $items['admin/config/gf-discount/newbie'] = array(
    'title' => 'Newbie Discount',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -1,
  );
  $items['admin/config/gf-discount/roles'] = [
    'title' => 'Discount for roles',
    'description' => 'Setting up discounts for custom roles',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['gf_discount_roles_settings_form'],
    'access arguments' => ['administer discounts'],
    'file' => 'gf_discount.admin.inc',
    'type' => MENU_LOCAL_TASK,
  ];
  return $items;
}

/**
 * Implements hook_permission().
 */
function gf_discount_permission() {
  // Разрешение управлять скидками.
  return array(
    'administer discounts' => array(
      'title' => t('Administer discounts'),
      'description' => t('Allows configuration of discounts'),
    ),
  );
}

/**
 * Implements hook_uc_cart_alter().
 */
function gf_discount_uc_cart_alter(&$items) {
  $base_discount = gf_discount_get_discount_all();

  foreach ($items as $key => $item) {
    $item_discount = $base_discount;

    if (isset($item->field_discount['und'])) {
      $tid = $item->field_discount['und'][0]['tid'];
      $discount_term = taxonomy_term_load($tid);
      $item_discount += (int) $discount_term->name; // процент за акционный товар
    }

    if ($item_discount) {
      $current_price = $item->price;
      $items[$key]->price = $items[$key]->sell_price = $current_price - (
        ($current_price / 100) * $item_discount);
    }
  }
}

/**
 * Проверка на пользователя-новичка(еще не делал заказов).
 *
 * @return bool
 *   Возвращаем единичку, если заказов еще не было.
 */
function gf_discount_check_newbie($uid=NULL) {
  if (is_null($uid)) {
    global $user;
    $uid = $user->uid;
  }

  if ($uid < 2) return; // Юзер 1 нам тоже не интересен.
  $result = db_query('SELECT 1 FROM {uc_orders} WHERE uid = :uid',
    [':uid' => $uid])->fetchField();

  return !$result;
}


/**
 * Получаем общую сумму заказа в рублях.
 *
 * @param array $cart_items
 * @return int
 */
function gf_discount_get_cart_total_sum_rub($cart_items) {
  $sum = 0;
  foreach($cart_items as $item) {
    $rub_price = (isset($item->gf_region_prices[GF_STOCK_REGION_RU])) 
      ? $item->gf_region_prices[GF_STOCK_REGION_RU] : $item->price; 
    $sum += $item->qty * $rub_price;
  }
  return $sum;
}


/**
 * Получаем дисконт для новочела.
 *
 * @param array $cart_items
 *   массив с элементами корзины
 * @param int $uid
 * @return int
 *   вовращаем процент скидки, или ноль, если не положено
 */
function gf_discount_get_discount_newbie($cart_items, $uid=NULL) {
  $discount = 0;
  $is_newbie = gf_discount_check_newbie($uid);

  if (!$is_newbie) 
    return $discount;

  $cart_total = gf_discount_get_cart_total_sum_rub($cart_items) / 1000;
  $newbie_discounts = variable_get('gf_discount_newbie_discounts', []);
  krsort($newbie_discounts); // сортируем по нисходящей

  foreach(array_keys($newbie_discounts) as $sum) {
    if ($cart_total >= $sum) {
      $discount = $newbie_discounts[$sum];
      break;
    }
  }

  if ($discount && !isset($_SESSION['gf_discount_newbie_msg_shown'])) {
    // Если скидка есть, радуем пользователя сообщением, как ему повезло.
    $msg = t('You received a promotional discount of !percent % on all products in your shopping cart',
    ['!percent' => $newbie_discount]);
    drupal_set_message($msg);
    $_SESSION['gf_discount_newbie_msg_shown'] = TRUE;
  }

  return $discount;
}


/**
 * Собираем все скидки одной функцией.
 *
 * @return int
 */
function gf_discount_get_discount_all() {
  $discount = 0;
  // Получаем скидку(в процентах) для "новичка".
  $discount += gf_discount_get_discount_newbie($items);
  // Десятипроцентная скидка для пользователей определенных блатных ролей.
  $discount += (user_has_role(GF_USER_ROLE_MANAGER_GARDENER_ID) 
    or user_has_role(GF_USER_ROLE_WHOLESALE_CUSTOMER_ID)) ? 10 : 0;
  // Получаем скидку для ролей.
  $discount += gf_discount_get_discount_role();

  return $discount;
}


function gf_discount_get_discount_role($roles=NULL) {
  if (is_null($roles)) {
    global $user;
    $roles = $user->roles;
  }

  $role_discounts = variable_get('gf_discount_role_discounts', []);

  if ($roles && $role_discounts) {
    $slice = array_intersect_key($role_discounts, $roles);
    $summarize = variable_get('gf_discount_summarize_discounts', FALSE);
    if ($summarize){
      return array_sum($slice);
    }
    else {
      return max($slice);
    }
  }

  return 0;
}
